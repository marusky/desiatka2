[{"/Users/adrianmarusak/Desktop/React/desiatka2/src/index.js":"1","/Users/adrianmarusak/Desktop/React/desiatka2/src/App.js":"2","/Users/adrianmarusak/Desktop/React/desiatka2/src/reportWebVitals.js":"3","/Users/adrianmarusak/Desktop/React/desiatka2/src/Form.js":"4","/Users/adrianmarusak/Desktop/React/desiatka2/src/Game.js":"5","/Users/adrianmarusak/Desktop/React/desiatka2/src/context.js":"6","/Users/adrianmarusak/Desktop/React/desiatka2/src/config.js":"7","/Users/adrianmarusak/Desktop/React/desiatka2/src/reducer.js":"8","/Users/adrianmarusak/Desktop/React/desiatka2/src/Players.js":"9","/Users/adrianmarusak/Desktop/React/desiatka2/src/Loading.js":"10","/Users/adrianmarusak/Desktop/React/desiatka2/src/AdminPanel.js":"11","/Users/adrianmarusak/Desktop/React/desiatka2/src/QuestionModal.js":"12","/Users/adrianmarusak/Desktop/React/desiatka2/src/GameBox.js":"13"},{"size":580,"mtime":1609422194400,"results":"14","hashOfConfig":"15"},{"size":762,"mtime":1609670829541,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609327314506,"results":"17","hashOfConfig":"15"},{"size":745,"mtime":1609498412957,"results":"18","hashOfConfig":"15"},{"size":221,"mtime":1609616165191,"results":"19","hashOfConfig":"15"},{"size":2764,"mtime":1609684592520,"results":"20","hashOfConfig":"15"},{"size":417,"mtime":1609422768569,"results":"21","hashOfConfig":"15"},{"size":1993,"mtime":1609684931164,"results":"22","hashOfConfig":"15"},{"size":380,"mtime":1609433851599,"results":"23","hashOfConfig":"15"},{"size":346,"mtime":1609432433634,"results":"24","hashOfConfig":"15"},{"size":969,"mtime":1609581719529,"results":"25","hashOfConfig":"15"},{"size":2928,"mtime":1609671698456,"results":"26","hashOfConfig":"15"},{"size":3030,"mtime":1609684399127,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jp0474",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/Users/adrianmarusak/Desktop/React/desiatka2/src/index.js",[],["61","62"],"/Users/adrianmarusak/Desktop/React/desiatka2/src/App.js",["63","64"],"import \"./App.css\";\nimport Form from \"./Form\";\nimport Game from \"./Game\";\nimport { useGlobalContext } from \"./context\";\nimport Players from \"./Players\";\nimport Loading from \"./Loading\";\nimport AdminPanel from \"./AdminPanel\";\n\nfunction App() {\n  const {\n    admin,\n    player: { isLoggedIn },\n    errorP,\n    errorQ,\n    errorN,\n    loadingP,\n    loadingQ,\n    loadingN,\n  } = useGlobalContext();\n\n  if (loadingP || loadingQ || loadingN) {\n    return <Loading />;\n  }\n  if (errorP || errorQ || errorN) {\n    return <div>{errorP || errorQ || errorN}</div>;\n  }\n  if (admin) {\n    return <AdminPanel />;\n  }\n  if (true) {\n    return <Game />;\n  } else {\n    return (\n      <>\n        {/* <Players /> */}\n        <Form />\n      </>\n    );\n  }\n}\n\nexport default App;\n","/Users/adrianmarusak/Desktop/React/desiatka2/src/reportWebVitals.js",[],"/Users/adrianmarusak/Desktop/React/desiatka2/src/Form.js",[],"/Users/adrianmarusak/Desktop/React/desiatka2/src/Game.js",["65"],"import React from \"react\";\nimport GameBox from \"./GameBox\";\nimport Players from \"./Players\";\n\nconst Game = () => {\n  return (\n    <div>\n      {/* <Players /> */}\n      <GameBox />\n    </div>\n  );\n};\n\nexport default Game;\n","/Users/adrianmarusak/Desktop/React/desiatka2/src/context.js",["66","67"],"import React, { useContext, useReducer, useEffect } from \"react\";\nimport { reducer } from \"./reducer\";\nimport Loading from \"./Loading\";\nimport {\n  useCollectionData,\n  useDocumentData,\n} from \"react-firebase-hooks/firestore\";\nimport { firestore } from \"./config\";\n\nconst AppContext = React.createContext();\n\nconst defaultState = {\n  admin: false,\n  player: {\n    name: \"\",\n    isLoggedIn: false,\n    points: 0,\n  },\n  players: [],\n  questions: [],\n  questionNum: 0,\n  questionLast: false,\n};\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const playersRef = firestore.collection(\"players\");\n  const playersQuery = playersRef.orderBy(\"name\");\n  const [players, loadingP, errorP] = useCollectionData(playersQuery, {\n    idField: \"id\",\n  });\n\n  const questionsRef = firestore.collection(\"questions\");\n  const questionsQuery = questionsRef;\n  const [questions, loadingQ, errorQ] = useCollectionData(questionsQuery, {\n    idField: \"id\",\n  });\n\n  const questionNumRef = firestore.doc(\"questionNum/number\");\n  const [questionObj, loadingN, errorN] = useDocumentData(questionNumRef);\n\n  const handleSubmit = async (e, name) => {\n    e.preventDefault();\n    console.log(\"submit name:\", name);\n    console.log(name === \"admin\");\n    if (name === \"admin\") {\n      dispatch({ type: \"ADMIN\" });\n    } else if (name) {\n      dispatch({ type: \"JOIN_GAME\", payload: { name } });\n    } else {\n      dispatch({ type: \"NO_NAME\" });\n    }\n  };\n\n  const addQuestion = (e, question) => {\n    e.preventDefault();\n    console.log(\"add question:\", question);\n    console.log(e);\n    dispatch({ type: \"ADD_QUESTION\", payload: question });\n  };\n\n  const nextQuestion = () => {\n    dispatch({ type: \"NEXT_QUESTION\", payload: { questions } });\n  };\n\n  const showAnswer = (id) => {\n    dispatch({ type: \"SHOW_ANSWER\", payload: { id } });\n  };\n\n  if (loadingP || loadingQ || loadingN) {\n    return (\n      <AppContext.Provider value={{}}>\n        <Loading />\n      </AppContext.Provider>\n    );\n  } else {\n    const questionNum = questionObj.number;\n    if (questionNum !== state.questionNum) {\n      dispatch({\n        type: \"UPDATE_QUESTION\",\n        payload: { questionNum, questions },\n      });\n    }\n\n    return (\n      <AppContext.Provider\n        value={{\n          ...state,\n          players,\n          errorP,\n          errorQ,\n          errorN,\n          loadingP,\n          loadingQ,\n          loadingN,\n          questions,\n          questionNum,\n          handleSubmit,\n          addQuestion,\n          nextQuestion,\n        }}\n      >\n        {children}\n      </AppContext.Provider>\n    );\n  }\n};\n\nconst useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppProvider, useGlobalContext, reducer };\n","/Users/adrianmarusak/Desktop/React/desiatka2/src/config.js",[],"/Users/adrianmarusak/Desktop/React/desiatka2/src/reducer.js",["68"],"import { act } from \"react-dom/test-utils\";\nimport { firestore } from \"./config\";\n\nconst addToDB = async (collection, data) => {\n  await firestore.collection(collection).add(data);\n};\n\nconst updateItemDB = async (collection, document, item, data) => {\n  await firestore\n    .collection(collection)\n    .doc(document)\n    .update({\n      [item]: data,\n    });\n};\n\nconst reducer = (state, action) => {\n  if (action.type === \"JOIN_GAME\") {\n    addToDB(\"players\", { name: action.payload.name, points: 0 });\n    console.log(\"Player joined game:\", {\n      name: action.payload.name,\n      points: 0,\n    });\n    return {\n      ...state,\n      player: { ...state.player, name: action.payload.name, isLoggedIn: true },\n    };\n  }\n\n  if (action.type === \"NO_NAME\") {\n    console.log(\"no val\");\n    return {\n      ...state,\n    };\n  }\n\n  if (action.type === \"ADMIN\") {\n    console.log(\"admin is here fellas\");\n    return {\n      ...state,\n      admin: true,\n    };\n  }\n\n  if (action.type === \"ADD_QUESTION\") {\n    console.log(\"question added\");\n    addToDB(\"questions\", action.payload);\n    return {\n      ...state,\n    };\n  }\n\n  if (action.type === \"NEXT_QUESTION\") {\n    console.log(\"next question\");\n    updateItemDB(\"questionNum\", \"number\", \"number\", state.questionNum + 1);\n    if (action.payload.questions.length === state.questionNum + 2) {\n      return {\n        ...state,\n        questionLast: true,\n      };\n    }\n    return {\n      ...state,\n      questionNum: state.questionNum + 1,\n    };\n  }\n\n  if (action.type === \"SHOW_ANSWER\") {\n    console.log(\"show answer, id:\", action.payload.id);\n    return { ...state };\n  }\n\n  if (action.type === \"UPDATE_QUESTION\") {\n    console.log(\"update question\");\n    if (action.payload.questionNum + 1 === action.payload.questions.length) {\n      var questionLast = true;\n    }\n    return {\n      ...state,\n      questionNum: action.payload.questionNum,\n      questionLast,\n    };\n  }\n  throw new Error(\"no matching action type\");\n};\n\nexport { reducer };\n","/Users/adrianmarusak/Desktop/React/desiatka2/src/Players.js",[],"/Users/adrianmarusak/Desktop/React/desiatka2/src/Loading.js",[],"/Users/adrianmarusak/Desktop/React/desiatka2/src/AdminPanel.js",["69"],"import React, { useState } from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport QuestionModal from \"./QuestionModal\";\n\nconst buttons = [\n  {\n    id: 1,\n    text: \"spravne\",\n  },\n  {\n    id: 2,\n    text: \"poradie\",\n  },\n  {\n    id: 3,\n    text: \"farba\",\n  },\n  {\n    id: 4,\n    text: \"odpoved\",\n  },\n];\n\nconst AdminPanel = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(\"\");\n  const openModal = (text) => {\n    setShowModal(true);\n    setModalType(text);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <main>\n      <section className=\"buttons\">\n        {buttons.map(({ id, text }) => (\n          <button key={id} onClick={() => openModal(text)}>\n            {text}\n          </button>\n        ))}\n      </section>\n      {showModal && (\n        <QuestionModal closeModal={closeModal} modalType={modalType} />\n      )}\n    </main>\n  );\n};\n\nexport default AdminPanel;\n","/Users/adrianmarusak/Desktop/React/desiatka2/src/QuestionModal.js",[],"/Users/adrianmarusak/Desktop/React/desiatka2/src/GameBox.js",["70","71"],"import React, { useState } from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { AiFillCloseCircle, AiFillCheckCircle } from \"react-icons/ai\";\n\nconst colorTranslator = {\n  biela: [\"white\", \"black\"],\n  žltá: [\"yellow\", \"black\"],\n  oranžová: [\"orange\", \"black\"],\n  červená: [\"red\", \"black\"],\n  modrá: [\"blue\", \"white\"],\n  zelená: [\"green\", \"white\"],\n  ružová: [\"pink\", \"black\"],\n  fialová: [\"purple\", \"white\"],\n  hnedá: [\"brown\", \"white\"],\n  sivá: [\"gray\", \"white\"],\n  čierna: [\"black\", \"white\"],\n};\n\nconst GameBox = () => {\n  const {\n    questions,\n    questionNum,\n    questionLast,\n    nextQuestion,\n    showAnswer,\n  } = useGlobalContext();\n\n  //   TODO nech posielam rovno cislo a nie taketo blbosti\n  const { text, type, queries } = questions[questionNum];\n  console.log(questionNum);\n  return (\n    <div className=\"flexbox\">\n      <article className=\"box\">\n        <section className=\"oval\">\n          <section className=\"question\">{text}</section>\n        </section>\n        {Object.values(queries).map(({ id, given, correct }, index) => {\n          return (\n            <>\n              <section\n                key={id}\n                className={`option`}\n                style={{\n                  transform: `translateX(${\n                    170 * Math.sin(((Math.PI * 2) / 10) * index)\n                  }px) translateY(${\n                    170 * Math.cos(((Math.PI * 2) / 10) * index)\n                  }px)`,\n                }}\n              >\n                {given}\n              </section>\n              <section\n                key={100 + id}\n                className={`answer-circle`}\n                style={{\n                  transform: `translateX(${\n                    290 * Math.sin(((Math.PI * 2) / 10) * index)\n                  }px) translateY(${\n                    290 * Math.cos(((Math.PI * 2) / 10) * index)\n                  }px)`,\n                }}\n                // onClick={() => showAnswer(id)}\n              >\n                {type === \"spravne\" && (\n                  <p className=\"answer-text\">\n                    {correct ? (\n                      <AiFillCheckCircle className=\"icon icon-correct\" />\n                    ) : (\n                      <AiFillCloseCircle className=\"icon icon-incorrect\" />\n                    )}\n                  </p>\n                )}\n                {type === \"farba\" && (\n                  <p\n                    className=\"answer-text color\"\n                    style={{\n                      backgroundColor: colorTranslator[correct][0],\n                      color: colorTranslator[correct][1],\n                    }}\n                  >\n                    {correct}\n                  </p>\n                )}\n              </section>\n            </>\n          );\n        })}\n      </article>\n      {!questionLast && (\n        <button onClick={nextQuestion} className=\"next-question\">\n          Next Question ({questionNum + 2}.) {questionLast}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default GameBox;\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":15},{"ruleId":"76","severity":1,"message":"80","line":12,"column":15,"nodeType":"78","messageId":"79","endLine":12,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":15},{"ruleId":"76","severity":1,"message":"81","line":1,"column":41,"nodeType":"78","messageId":"79","endLine":1,"endColumn":50},{"ruleId":"76","severity":1,"message":"82","line":67,"column":9,"nodeType":"78","messageId":"79","endLine":67,"endColumn":19},{"ruleId":"76","severity":1,"message":"83","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"76","severity":1,"message":"84","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":26},{"ruleId":"76","severity":1,"message":"85","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"82","line":25,"column":5,"nodeType":"78","messageId":"79","endLine":25,"endColumn":15},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Players' is defined but never used.","Identifier","unusedVar","'isLoggedIn' is assigned a value but never used.","'useEffect' is defined but never used.","'showAnswer' is assigned a value but never used.","'act' is defined but never used.","'useGlobalContext' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]