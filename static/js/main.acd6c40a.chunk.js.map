{"version":3,"sources":["config.js","reducer.js","Loading.js","context.js","Form.js","GameBox.js","Players.js","Game.js","QuestionModal.js","AdminPanel.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","addToDB","collection","data","a","add","updateItemDB","document","item","doc","update","setShowQuestionDB","questionID","answerID","queries","show","setHideQuestionDB","atr","reducer","state","action","type","name","payload","points","player","isLoggedIn","admin","questions","questionNum","id","i","attribute","length","questionLast","players","amount","find","Error","Loading","className","AppContext","React","createContext","defaultState","AppProvider","children","useReducer","dispatch","playersQuery","orderBy","useCollectionData","idField","loadingP","errorP","questionsQuery","loadingQ","errorQ","questionNumRef","useDocumentData","questionObj","loadingN","errorN","handleSubmit","e","preventDefault","console","log","Provider","value","number","showAnswer","addQuestion","question","nextQuestion","changeScore","useGlobalContext","useContext","Form","useState","setName","onSubmit","placeholder","onChange","target","colorTranslator","biela","žltá","oranžová","červená","modrá","zelená","ružová","fialová","hnedá","sivá","čierna","GameBox","text","Object","values","map","index","given","correct","style","transform","Math","sin","PI","cos","onClick","backgroundColor","color","Players","Game","QuestionModal","closeModal","modalType","questionTemplate","option1","option2","option3","option4","option5","option6","option7","option8","option9","option10","setQuestion","handleChange","oldQuestion","split","option","keys","buttons","AdminPanel","showModal","setShowModal","setModalType","openModal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.acd6c40a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAL_YFLJciBdp-3ilv8YnBK07zhD73IqdQ\",\n  authDomain: \"desiatka-ecavza.firebaseapp.com\",\n  projectId: \"desiatka-ecavza\",\n  storageBucket: \"desiatka-ecavza.appspot.com\",\n  messagingSenderId: \"459276092073\",\n  appId: \"1:459276092073:web:77a7aee2f2c30c674adfb8\",\n});\n\nexport const firestore = firebase.firestore();\n","import { act } from \"react-dom/test-utils\";\nimport { firestore } from \"./config\";\n\nconst addToDB = async (collection, data) => {\n  await firestore.collection(collection).add(data);\n};\n\nconst updateItemDB = async (collection, document, item, data) => {\n  await firestore\n    .collection(collection)\n    .doc(document)\n    .update({\n      [item]: data,\n    });\n};\n\nconst setShowQuestionDB = async (\n  questionID,\n  answerID,\n  queries,\n  show = true\n) => {\n  await firestore\n    .collection(\"questions\")\n    .doc(questionID)\n    .update({\n      queries: {\n        ...queries,\n        [`option${answerID}`]: { ...queries[`option${answerID}`], show },\n      },\n    });\n};\n\nconst setHideQuestionDB = (questionID, atr) => {\n  firestore\n    .collection(\"questions\")\n    .doc(questionID)\n    .update({\n      [atr]: false,\n    });\n};\n\nconst reducer = (state, action) => {\n  if (action.type === \"JOIN_GAME\") {\n    addToDB(\"players\", { name: action.payload.name, points: 0 });\n    // console.log(\"Player joined game:\", {\n    //   name: action.payload.name,\n    //   points: 0,\n    // });\n    return {\n      ...state,\n      player: { ...state.player, name: action.payload.name, isLoggedIn: true },\n    };\n  }\n\n  if (action.type === \"NO_NAME\") {\n    // console.log(\"no val\");\n    return {\n      ...state,\n    };\n  }\n\n  if (action.type === \"ADMIN\") {\n    // console.log(\"admin is here fellas\");\n    return {\n      ...state,\n      admin: true,\n    };\n  }\n\n  if (action.type === \"ADD_QUESTION\") {\n    // console.log(\"question added\");\n    addToDB(\"questions\", action.payload);\n    return {\n      ...state,\n    };\n  }\n\n  if (action.type === \"NEXT_QUESTION\") {\n    // console.log(\"next question\");\n    const { id: questionID } = action.payload.questions[\n      action.payload.questionNum\n    ];\n    for (var i = 1; i <= 10; i++) {\n      const attribute = `queries.option${i}.show`;\n      setHideQuestionDB(questionID, attribute);\n    }\n\n    updateItemDB(\"questionNum\", \"number\", \"number\", state.questionNum + 1);\n    if (action.payload.questions.length === state.questionNum + 2) {\n      return {\n        ...state,\n        questionLast: true,\n      };\n    }\n    return {\n      ...state,\n      questionNum: state.questionNum + 1,\n    };\n  }\n\n  if (action.type === \"SHOW_ANSWER\") {\n    // console.log('show answer');\n    setShowQuestionDB(\n      action.payload.questionID,\n      action.payload.answerID,\n      action.payload.questions[state.questionNum].queries\n    );\n    return { ...state };\n  }\n\n  if (action.type === \"UPDATE_QUESTION\") {\n    // console.log(\"update question\");\n    if (action.payload.questionNum + 1 === action.payload.questions.length) {\n      var questionLast = true;\n    }\n    return {\n      ...state,\n      questionNum: action.payload.questionNum,\n      questionLast,\n    };\n  }\n\n  if (action.type === \"CHANGE_SCORE\") {\n    // console.log(\"change score\");\n    const { players, name, amount } = action.payload;\n    const player = players.find((player) => player.name === name);\n    updateItemDB(\"players\", player.id, \"points\", player.points + amount);\n\n    return {\n      ...state,\n    };\n  }\n  throw new Error(\"no matching action type\");\n};\n\nexport { reducer };\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <main className=\"center\">\n      <div className=\"lds-roller\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </main>\n  );\n};\n\nexport default Loading;\n","import React, { useContext, useReducer } from \"react\";\nimport { reducer } from \"./reducer\";\nimport Loading from \"./Loading\";\nimport {\n  useCollectionData,\n  useDocumentData,\n} from \"react-firebase-hooks/firestore\";\nimport { firestore } from \"./config\";\n\nconst AppContext = React.createContext();\n\nconst defaultState = {\n  admin: false,\n  player: {\n    name: \"\",\n    isLoggedIn: false,\n    points: 0,\n  },\n  players: [],\n  questions: [],\n  questionNum: 0,\n  questionLast: false,\n};\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const playersRef = firestore.collection(\"players\");\n  const playersQuery = playersRef.orderBy(\"name\");\n  const [players, loadingP, errorP] = useCollectionData(playersQuery, {\n    idField: \"id\",\n  });\n\n  const questionsRef = firestore.collection(\"questions\");\n  const questionsQuery = questionsRef;\n  const [questions, loadingQ, errorQ] = useCollectionData(questionsQuery, {\n    idField: \"id\",\n  });\n\n  const questionNumRef = firestore.doc(\"questionNum/number\");\n  const [questionObj, loadingN, errorN] = useDocumentData(questionNumRef);\n\n  const handleSubmit = async (e, name) => {\n    e.preventDefault();\n    console.log(\"submit name:\", name);\n    console.log(name === \"admin\");\n    if (name === \"admin\") {\n      dispatch({ type: \"ADMIN\" });\n    } else if (name) {\n      dispatch({ type: \"JOIN_GAME\", payload: { name } });\n    } else {\n      dispatch({ type: \"NO_NAME\" });\n    }\n  };\n\n  const addQuestion = (e, question) => {\n    e.preventDefault();\n    console.log(\"add question:\", question);\n    console.log(e);\n    dispatch({ type: \"ADD_QUESTION\", payload: question });\n  };\n\n  const nextQuestion = () => {\n    dispatch({\n      type: \"NEXT_QUESTION\",\n      payload: { questions, questionNum: state.questionNum },\n    });\n  };\n\n  const showAnswer = (questionID, answerID) => {\n    dispatch({\n      type: \"SHOW_ANSWER\",\n      payload: { questionID, answerID, questions },\n    });\n  };\n\n  const changeScore = (amount, name) => {\n    dispatch({\n      type: \"CHANGE_SCORE\",\n      payload: { players, amount, name },\n    });\n  };\n\n  if (loadingP || loadingQ || loadingN) {\n    return (\n      <AppContext.Provider value={{}}>\n        <Loading />\n      </AppContext.Provider>\n    );\n  } else {\n    const questionNum = questionObj.number;\n    if (questionNum !== state.questionNum) {\n      dispatch({\n        type: \"UPDATE_QUESTION\",\n        payload: { questionNum, questions },\n      });\n    }\n\n    return (\n      <AppContext.Provider\n        value={{\n          ...state,\n          players,\n          errorP,\n          errorQ,\n          errorN,\n          loadingP,\n          loadingQ,\n          loadingN,\n          questions,\n          questionNum,\n          showAnswer,\n          handleSubmit,\n          addQuestion,\n          nextQuestion,\n          changeScore,\n        }}\n      >\n        {children}\n      </AppContext.Provider>\n    );\n  }\n};\n\nconst useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppProvider, useGlobalContext, reducer };\n","import React, { useState } from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Form = () => {\n  const { handleSubmit } = useGlobalContext();\n  const [name, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <section className=\"center\">\n      <form onSubmit={(e) => handleSubmit(e, name)} className=\"neomorph\">\n        <div className=\"segment\">\n          <h1>Desiatka</h1>\n        </div>\n        <label>\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">join</button>\n      </form>\n    </section>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { AiFillCloseCircle, AiFillCheckCircle } from \"react-icons/ai\";\n\nconst colorTranslator = {\n  biela: [\"white\", \"black\"],\n  žltá: [\"yellow\", \"black\"],\n  oranžová: [\"orange\", \"black\"],\n  červená: [\"red\", \"black\"],\n  modrá: [\"blue\", \"white\"],\n  zelená: [\"green\", \"white\"],\n  ružová: [\"pink\", \"black\"],\n  fialová: [\"purple\", \"white\"],\n  hnedá: [\"brown\", \"white\"],\n  sivá: [\"gray\", \"white\"],\n  čierna: [\"black\", \"white\"],\n};\n\nconst GameBox = () => {\n  const {\n    questions,\n    questionNum,\n    questionLast,\n    nextQuestion,\n    showAnswer,\n  } = useGlobalContext();\n\n  //   TODO nech posielam rovno cislo a nie taketo blbosti\n  const { text, type, queries } = questions[questionNum];\n  const questionID = questions[questionNum].id;\n  console.log(questionNum);\n  return (\n    <div className=\"flexbox\">\n      <article className=\"box\">\n        <section className=\"oval\">\n          <section className=\"question\">{text}</section>\n        </section>\n        {Object.values(queries).map(\n          ({ id: answerID, given, correct, show }, index) => {\n            return (\n              <div key={answerID}>\n                <section\n                  className=\"option\"\n                  style={{\n                    transform: `translateX(${\n                      170 * Math.sin(((Math.PI * 2) / 10) * index)\n                    }px) translateY(${\n                      170 * Math.cos(((Math.PI * 2) / 10) * index)\n                    }px)`,\n                  }}\n                >\n                  {given}\n                </section>\n                <section\n                  className={`answer-circle ${show && \"show\"}`}\n                  style={{\n                    transform: `translateX(${\n                      290 * Math.sin(((Math.PI * 2) / 10) * index)\n                    }px) translateY(${\n                      290 * Math.cos(((Math.PI * 2) / 10) * index)\n                    }px)`,\n                  }}\n                  onClick={() => showAnswer(questionID, answerID)}\n                >\n                  {type === \"spravne\" && (\n                    <p className={`answer-text ${show && \"show\"}`}>\n                      {correct ? (\n                        <AiFillCheckCircle className=\"icon icon-correct\" />\n                      ) : (\n                        <AiFillCloseCircle className=\"icon icon-incorrect\" />\n                      )}\n                    </p>\n                  )}\n                  {type === \"farba\" && (\n                    <p\n                      className={`answer-text color ${show && \"show\"}`}\n                      style={{\n                        backgroundColor: colorTranslator[correct][0],\n                        color: colorTranslator[correct][1],\n                      }}\n                    >\n                      {correct}\n                    </p>\n                  )}\n                  {type === \"poradie\" && (\n                    <p className={`answer-text ${show && \"show\"}`}>{correct}</p>\n                  )}\n                  {type === \"odpoved\" && (\n                    <p className={`answer-text  ${show && \"show\"}`}>\n                      {correct}\n                    </p>\n                  )}\n                </section>\n              </div>\n            );\n          }\n        )}\n      </article>\n      {!questionLast && (\n        <button onClick={nextQuestion} className=\"next-question\">\n          Next Question ({questionNum + 2}.) {questionLast}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default GameBox;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Players = () => {\n  const { players, changeScore } = useGlobalContext();\n  return (\n    <div className=\"players\">\n      {players &&\n        players.map((player) => {\n          return (\n            <section key={player.id} className=\"player\">\n              <h3>{player.name}</h3>\n              <div className=\"player-score\">\n                <button\n                  className=\"unit minus\"\n                  onClick={() => changeScore(-1, player.name)}\n                >\n                  -\n                </button>\n                {player.points}\n                <button\n                  className=\"unit plus\"\n                  onClick={() => changeScore(1, player.name)}\n                >\n                  +\n                </button>\n              </div>\n            </section>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Players;\n","import React from \"react\";\nimport GameBox from \"./GameBox\";\nimport Players from \"./Players\";\n\nconst Game = () => {\n  return (\n    <div>\n      <Players />\n      <GameBox />\n    </div>\n  );\n};\n\nexport default Game;\n","import React, { useState } from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst QuestionModal = ({ closeModal, modalType }) => {\n  const { addQuestion } = useGlobalContext();\n  const questionTemplate = {\n    text: \"\",\n    type: modalType,\n    queries: {\n      option1: { id: 1, given: \"\", correct: \"\", show: false },\n      option2: { id: 2, given: \"\", correct: \"\", show: false },\n      option3: { id: 3, given: \"\", correct: \"\", show: false },\n      option4: { id: 4, given: \"\", correct: \"\", show: false },\n      option5: { id: 5, given: \"\", correct: \"\", show: false },\n      option6: { id: 6, given: \"\", correct: \"\", show: false },\n      option7: { id: 7, given: \"\", correct: \"\", show: false },\n      option8: { id: 8, given: \"\", correct: \"\", show: false },\n      option9: { id: 9, given: \"\", correct: \"\", show: false },\n      option10: { id: 10, given: \"\", correct: \"\", show: false },\n    },\n  };\n\n  const [question, setQuestion] = useState(questionTemplate);\n\n  const handleChange = (e) => {\n    if (e.target.name === \"questionText\") {\n      setQuestion((oldQuestion) => {\n        const newQuestion = { ...oldQuestion, text: e.target.value };\n        return newQuestion;\n      });\n    } else {\n      setQuestion((oldQuestion) => {\n        const [option, state] = e.target.name.split(\" \");\n        const newQuestion = {\n          ...oldQuestion,\n          queries: {\n            ...oldQuestion.queries,\n            [option]: {\n              ...oldQuestion.queries[option],\n              [state]: e.target.value,\n            },\n          },\n        };\n        return newQuestion;\n      });\n    }\n  };\n\n  return (\n    <section>\n      {modalType}\n      <form onSubmit={(e) => addQuestion(e, question)}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"questionText\"\n            placeholder=\"question text\"\n            value={question.text}\n            onChange={handleChange}\n          />\n        </label>\n        {Object.keys(question.queries).map((option) => (\n          <div className=\"given-answer\" key={question.queries[option].id}>\n            <label>\n              <input\n                type=\"text\"\n                placeholder={`given ${question.queries[option].id}`}\n                name={`${option} given`}\n                value={question.queries[option].given}\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              <input\n                type=\"text\"\n                placeholder={`answer ${question.queries[option].id}`}\n                name={`${option} correct`}\n                value={question.queries[option].correct}\n                onChange={handleChange}\n              />\n            </label>\n          </div>\n        ))}\n        <button type=\"submit\">Submit</button>\n      </form>\n      <button type=\"button\" onClick={closeModal}>\n        close\n      </button>\n    </section>\n  );\n};\n\nexport default QuestionModal;\n","import React, { useState } from \"react\";\nimport QuestionModal from \"./QuestionModal\";\n\nconst buttons = [\n  {\n    id: 1,\n    text: \"spravne\",\n  },\n  {\n    id: 2,\n    text: \"poradie\",\n  },\n  {\n    id: 3,\n    text: \"farba\",\n  },\n  {\n    id: 4,\n    text: \"odpoved\",\n  },\n];\n\nconst AdminPanel = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(\"\");\n  const openModal = (text) => {\n    setShowModal(true);\n    setModalType(text);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <main>\n      <section className=\"buttons\">\n        {buttons.map(({ id, text }) => (\n          <button key={id} onClick={() => openModal(text)}>\n            {text}\n          </button>\n        ))}\n      </section>\n      {showModal && (\n        <QuestionModal closeModal={closeModal} modalType={modalType} />\n      )}\n    </main>\n  );\n};\n\nexport default AdminPanel;\n","import \"./App.css\";\nimport Form from \"./Form\";\nimport Game from \"./Game\";\nimport { useGlobalContext } from \"./context\";\nimport Loading from \"./Loading\";\nimport AdminPanel from \"./AdminPanel\";\n\nfunction App() {\n  const {\n    admin,\n    player: { isLoggedIn },\n    errorP,\n    errorQ,\n    errorN,\n    loadingP,\n    loadingQ,\n    loadingN,\n  } = useGlobalContext();\n\n  if (loadingP || loadingQ || loadingN) {\n    return <Loading />;\n  }\n  if (errorP || errorQ || errorN) {\n    return <div>{errorP || errorQ || errorN}</div>;\n  }\n  if (admin) {\n    return <AdminPanel />;\n  }\n  if (isLoggedIn) {\n    return <Game />;\n  } else {\n    return <Form />;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}